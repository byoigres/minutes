{"version":3,"sources":["webpack:///./src/resources/markdown/what-is-this.en.md","webpack:///./src/resources/markdown/what-is-this.es.md","webpack:///./src/resources/markdown/about.en.md","webpack:///./src/resources/markdown/about.es.md","webpack:///./src/components/Navbar.js","webpack:///./src/resources/store.js","webpack:///./src/actions/language.js","webpack:///./src/constants/time.js","webpack:///./src/constants/language.js","webpack:///./src/reducers/index.js","webpack:///./src/reducers/time.js","webpack:///./src/reducers/language.js","webpack:///./src/containers/App.js","webpack:///./src/components/Routes.js","webpack:///./src/containers/FullPageLayout.js","webpack:///./src/containers/MainLayout.js","webpack:///./src/components/Footer.js","webpack:///./src/components/LanguageSelector.js","webpack:///./src/components/GlobalStyle.js","webpack:///./src/selectors/selectLanguage.js","webpack:///./src/resources/messages.js","webpack:///./src/index.js"],"names":["module","exports","Navbar","styled","div","p","theme","minBlack","fullWhite","isTransparent","middleWhite","primaryColor1","primaryColor2","Container","Brand","Link","A","darkWhite","NavbarList","NavbarItem","Wrapper","brandText","to","id","displayName","history","createBrowserHistory","composeEnhancers","compose","configureStore","preloadedState","createStore","createRootReducer","applyMiddleware","routerMiddleware","changeLanguage","language","locale","type","constants","UPDATE_TIME","CHANGE_LANGUAGE","LANGUAGE_SPANISH","LANGUAGE_ENGLISH","LOCALE_EN","LOCALE_ES","LOCAL_STORAGE_LOCALE_KEY","combineReducers","router","connectRouter","time","calculateTime","currentDate","Date","remainingMinutes","getHours","getMinutes","remainingSeconds","getSeconds","initialState","state","action","Object","assign","getLocale","navigatorLang","navigator","split","defaultLocale","localStorage","getItem","selected","setItem","IntlContainer","messages","selectLanguage","App","store","Home","lazy","WhatIsThis","About","Routes","exact","path","fallback","component","FullPageLayout","children","languages","text","MainLayout","dispatch","useDispatch","onChangeLanguage","lang","Footer","darkBlack","LanguageSelector","Language","span","map","key","onClick","GlobalStyle","createGlobalStyle","baseFontSize","baseColor","baseFontFamily","useSelector","shallowEqual","enLocaleMessages","markdownWhatIsThisEn","markdownAboutEn","esLocaleMessages","markdownWhatIsThisEs","markdownAboutEs","en","es","mountNode","document","getElementById","ReactDOM","render"],"mappings":"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","file":"app.d3a8dbc75e183fca9955.js","sourcesContent":["module.exports = \"<blockquote>We all have the exact same 1,440 minutes per day. You don&#39;t get more or less than Elon Musk, Bill Gates, Mark Zuckerberg or whoever inspire you. Use them wisely. <sup>1</sup><p></p> </blockquote><h1 id=what-is-this>What is this?</h1> <p>This is a simple web page that shows you the number of minutes remaining in the day in a block mode (and with a giant number in the center), each block represents one of the 1,440 minutes that the day has and it goes empty every second.</p> <h1 id=why-i-want-this>Why I want this?</h1> <p>This is not about what you want but about what you can realize by watching every minute getting empty.</p> <h1 id=what-do-you-mean>What do you mean?</h1> <p>Many times you think you don&#39;t have enough time to achieve your dreams, to fulfill your goals or to do that hobby that you like so much, but many times you dedicate time to meaningless activities that do not contribute anything to improve on you. Time runs, in fact as you find yourself reading this text, one of the blocks is about to get empty and you will have one minute less.</p> <h1 id=one-minute-but-that-is-only-00694-of-the-minutes-of-the-day>One minute? But that is only 0.0694% of the minutes of the day</h1> <p>One of the remaining and available minutes of the day.</p> <h1 id=remaining-available>Remaining? Available?</h1> <p>Yes, remaining and available minutes.</p> <p>Since the beginning of this day a plenty amount of minutes has passed and only remain a few of which you have available some of them only to investing in what you have always wanted. ðŸ˜„</p> <h1 id=im-not-following-you>I&#39;m not following you</h1> <p>Well, there are activities that you probably have to do like sleep, eat, getting washed and dressed, work or getting in the bus. All this takes you most of the remaining minutes of the day, but you can invest those few minutes that are available in some activity that improves something in you.</p> <h1 id=but-i-barely-have-300-minutes-available-a-day>But I barely have 300 minutes available a day</h1> <p>Minutes you can use to improve yourself.</p> <p>Going out to jog only takes 20 to 30 minutes, if you are a good reader you can easily read a page of a book in a few minutes, do you have an idea of a project and do not know where to start? Invest five minutes to think and develop the idea. In fact 300 minutes is approximately 20% of the day. Investing 20% of your time to improve yourself is not a bad idea, think well in what you invest every minute of the day and use them wisely.</p> <blockquote>The key is in not spending time, but in investing it. <p><small>Stephen R. Covey</small></p><p></p> </blockquote><p>Notes</p> <p><small><sup>1</sup> This text is based on the one that appears <a href=https://medium.com/@chris_behnke/embrace-your-1440-e015f721a27a>here</a>.</small></p> \";","module.exports = \"<blockquote>Todos tenemos exactamente los mismos 1,440 minutos por dÃ­a. No obtienes mÃ¡s o menos que Elon Musk, Bill Gates, Mark Zuckerberg o quien sea que te inspire. Ãšsalos sabiamente. <sup>1</sup><p></p> </blockquote><h1 id=Â¿quÃ©-es-esto>Â¿QuÃ© es esto?</h1> <p>Esta es una simple pÃ¡gina web que muestra el nÃºmero de minutos restantes en el dÃ­a en modo de bloques (y con un nÃºmero gigante al centro), cada bloque representa uno de los 1,440 minutos que tiene el dÃ­a y se vacÃ­a a como pasa cada segundo.</p> <h1 id=Â¿para-quÃ©-quiero-esto>Â¿Para quÃ© quiero esto?</h1> <p>Esto no se trata de lo que quieras sino de lo que te puedes dar cuenta al ver cada minuto vaciarse.</p> <h1 id=Â¿a-quÃ©-te-refieres>Â¿A quÃ© te refieres?</h1> <p>Muchas veces puedes pensar que no tienes suficiente tiempo para alcanzar tus sueÃ±os, cumplir tus metas o hacer ese pasatiempo que tanto te gusta, pero muchas veces dedicas tiempo a actividades sin sentido que no contribuyen en nada para mejorar en ti. El tiempo corre, de hecho a medida que te encuentras leyendo este texto, uno de los bloques estÃ¡ a punto de vaciarse y tendrÃ¡s un minuto menos.</p> <h1 id=Â¿un-minuto-pero-si-eso-es-solo-el-00694-de-los-minutos-del-dÃ­a>Â¿Un minuto? Pero si eso es solo el 0.0694% de los minutos del dÃ­a</h1> <p>Uno de los minutos restantes y disponibles del dÃ­a.</p> <h1 id=Â¿restantes-Â¿disponibles>Â¿Restantes? Â¿Disponibles?</h1> <p>Si, restantes y disponibles.</p> <p>Desde el inicio del dÃ­a un montÃ³n de minutos han pasado y solo restan unos cuantos de los cuales solo tienes disponibles algunos de ellos para invertir en lo que siempre has querido. ðŸ˜„</p> <h1 id=no-te-estoy-entendiendo>No te estoy entendiendo</h1> <p>Bueno, hay actividades que probablemente tengas que hacer como dormir, comer, asearte, trabajar, transportarte. Todas estas actividades te toman la mayorÃ­a de los minutos restantes del dÃ­a, pero puedes invertir esos pocos minutos que estÃ¡n disponibles en alguna actividad que mejore algo en ti.</p> <h1 id=pero-si-apenas-cuento-con-300-minutos-disponibles-al-dÃ­a>Pero si apenas cuento con 300 minutos disponibles al dÃ­a.</h1> <p>Minutos que puedes utilizar para mejorar algo en ti.</p> <p>Salir a correr solamente toma de 20 a 30 minutos, si eres un buen lector fÃ¡cilmente puedes leer una pÃ¡gina de un libro en unos cuantos minutos, Â¿tienes una idea de un proyecto y no sabes por dÃ³nde comenzar? Invierte cinco minutos en pensar y desarrollar la idea. De hecho, 300 minutos son aproximadamente el 20% del dÃ­a. Invertir 20% de tu tiempo para mejorar algo en ti no es mala idea, piensa bien en que inviertes cada minuto del dÃ­a y Ãºsalos sabiamente.</p> <blockquote>La clave no estÃ¡ en dejar pasar el tiempo, sino en invertirlo. <p><small>Stephen R. Covey</small></p><p></p> </blockquote><p>Notas</p> <p><small><sup>1</sup> Este texto estÃ¡ basado en el que aparece en <a href=https://medium.com/@chris_behnke/embrace-your-1440-e015f721a27a>esta publicaciÃ³n</a>.</small></p> \";","module.exports = \"<h1 id=about>About</h1> <h2 id=about-me>About me</h2> <p>Hello, my name is <i>Sergio</i>, I&#39;m a web developer and I&#39;m really bad managing my time.</p> <p>One day I was reading a <a href=https://medium.com/@chris_behnke/embrace-your-1440-e015f721a27a>publication</a> on <a href=https://medium.com>medium</a> that brought to my mind something I didn&#39;t realize: <strong>I have a plenty of time to invest in things that I really want, I just have to be patient</strong>.</p> <blockquote>Investing a little bit of time of the day in things you really want can lead you to amazing results in a long term.<p></p> </blockquote><p>After reading the <strong><a href=https://medium.com/@chris_behnke/embrace-your-1440-e015f721a27a>Embrace Your 1440</a></strong> Medium&#39;s publication I started to wondering how many minutes do I have left of the day? Then I started writing the source code for a <strong>simple webpage</strong> that tell me that. The rest of the story is right here on your screen.</p> <p>I&#39;m really happy to launch this simple project because it&#39;s my first launch, all the other projects that I&#39;ve been working on are unfinished and I hope this would change from now on.</p> <p>Best of luck in every single goal you have. <strong>May the time be with you</strong>.</p> <h2 id=about-this-project>About this project</h2> <p>Do you want to know how this project was built? Go to the README file in the <a href=https://github.com/byoigres/minutes>Github repo</a> and find out.</p> <p><small>Psst, you can contact me within the social media buttons in the main section of <a href=https://byoigr.es>my site</a>.</small></p> \";","module.exports = \"<h1 id=acerca-de>Acerca de</h1> <h2 id=acerca-de-mi>Acerca de mi</h2> <p>Hola, me llamo <i>Sergio</i>, soy programador web y soy realmente malo manejando mis tiempos.</p> <p>Un dÃ­a me encontraba leyendo una <a href=https://medium.com/@chris_behnke/embrace-your-1440-e015f721a27a>publicaciÃ³n</a> en <a href=https://medium.com>medium</a> que trajo a mi mente algo que no me habÃ­a dado cuenta: <strong>tengo un montÃ³n de tiempo para invertir en cosas que realmente quiero, solo tengo que ser paciente</strong>.</p> <blockquote>Invertir un poco de tu tiempo al dÃ­a en cosas que realmente quieres puede llevarte a resultados asombrosos a largo plazo.<p></p> </blockquote><p>DespuÃ©s de leer la publicaciÃ³n de medium <strong><a href=https://medium.com/@chris_behnke/embrace-your-1440-e015f721a27a>Embrace Your 1440</a></strong> comencÃ© a preguntarme Â¿cuÃ¡ntos minutos quedaban del dÃ­a? Entonces comencÃ© a escribir el cÃ³digo fuente para una <strong>pÃ¡gina web sencilla</strong> que me dijera eso. El resto de la historia lo estÃ¡s mirando ahora mismo en tu pantalla.</p> <p>Estoy muy feliz de lanzar este sencillo proyecto porque es mi primer lanzamiento, todos los otros proyectos en los que he estado trabajando estÃ¡n sin terminar y espero que eso cambie a partir de ahora en adelante.</p> <p>La mejor de las suertes en cada meta que tengas. <strong>Que el tiempo te acompaÃ±e</strong>.</p> <h2 id=acerca-de-este-proyecto>Acerca de este proyecto</h2> <p>Â¿Quieres conocer como estÃ¡ construido este proyecto? Ve al archivo README en el <a href=https://github.com/byoigres/minutes>repositorio de Github</a> y averÃ­gualo.</p> <p><small>Pss, puedes contactarme por medio de los botones de redes sociales en la secciÃ³n principal de <a href=https://byoigr.es>mi pÃ¡gina web</a>.</small></p> \";","import React from 'react';\nimport { Link as A } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nconst Navbar = styled.div`\n  position: fixed;\n  width: 100%;\n  box-shadow: 0 0.0625rem 1rem 0.25rem ${p => p.theme.minBlack}; /* var(--min-black) */\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  color: ${p => p.theme.fullWhite}; /* var(--full-white) */\n  background-color: ${p => p.isTransparent ? p.theme.middleWhite : p.theme.primaryColor1}; /* var(--primary-color-1); */\n  z-index: 4;\n  height: 4rem;\n  max-height: 8rem;\n  border-bottom: 0.0625rem solid ${p => p.theme.primaryColor2}; /* var(--primary-color-2) */\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  max-width: 76rem;\n  width: 100%;\n  align-content: center;\n\n  @media only screen and (max-width: 79.999rem) { /* width < 80rem */\n    margin: 0 1rem;\n  }\n`;\n\nconst Brand = styled.div`\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n`;\n\nconst Link = styled(A)`\n  display: block;\n  font-weight: bold;\n  padding: 1.3rem 0.5rem;\n  padding-left: 0;\n  font-size: 1.2rem;\n  color: ${p => p.theme.fullWhite}; /* var(--full-white) */\n  transition: 0.5s color;\n\n  &:hover {\n  color: ${p => p.theme.darkWhite};/* var(--dark-white) */\n      text-decoration: none;\n  }\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: stretch;\n`;\n\nconst NavbarItem = styled(Link)`\n  color: ${p => p.theme.fullWhite}; /* var(--full-white) */\n  font-size: 1rem;\n  padding: 1.35rem 0.5rem;\n  transition: 0.5s background-color;\n\n  &:hover {\n      background-color: ${p => p.theme.primaryColor2}; /* var(--primary-color-2) */\n      text-decoration: none;\n  }\n`;\n\nconst Wrapper = ({ brandText, isTransparent }) => (\n  <Navbar isTransparent={isTransparent}>\n    <Container>\n      <Brand>\n        <Link to=\"/\">{brandText}</Link>\n      </Brand>\n      <NavbarList>\n        <NavbarItem to=\"/what-is-this\">\n          <FormattedMessage id=\"app.menu.what-is-this\" />\n        </NavbarItem>\n        <NavbarItem to=\"/about\">\n          <FormattedMessage id=\"app.menu.about\" />\n        </NavbarItem>\n      </NavbarList>\n    </Container>\n  </Navbar>\n);\n\nWrapper.displayName = 'Navbar';\n\nexport default Wrapper;\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from '../reducers';\n\nexport const history = createBrowserHistory();\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n    process.env.NODE_ENV !== 'production' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    composeEnhancers(\n      applyMiddleware(\n        // normalizrMiddleware(normalizrConfig),\n        routerMiddleware(history), // for dispatching history actions\n        // thunk\n        // ... other middlewares ...\n      ),\n    ),\n  );\n\n  return store;\n}\n","import * as constants from '../constants';\n\nexport function changeLanguage(language, locale) {\n  return {\n    type: constants.CHANGE_LANGUAGE,\n    language,\n    locale,\n  };\n}\n","export const UPDATE_TIME = 'UPDATE_TIME';\n","export const CHANGE_LANGUAGE = 'CHANGE_LANGUAGE';\nexport const LANGUAGE_SPANISH = 'LANGUAGE_SPANISH';\nexport const LANGUAGE_ENGLISH = 'LANGUAGE_ENGLISH';\nexport const LOCALE_EN = 'en';\nexport const LOCALE_ES = 'es';\nexport const LOCAL_STORAGE_LOCALE_KEY = 'LOCAL_STORAGE_LOCALE_KEY';\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport time from './time';\nimport language from './language';\n\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  time,\n  language\n});\n","import * as constants from '../constants';\n\nfunction calculateTime() {\n  const totalMinutes = 1440;\n  const currentDate = new Date();\n  const elapsedMinutes = (currentDate.getHours() * 60) + currentDate.getMinutes();\n  const remainingSeconds = currentDate.getSeconds();\n  const remainingMinutes = totalMinutes - elapsedMinutes;\n\n  return {\n    remainingMinutes,\n    remainingSeconds,\n  };\n}\n\nconst initialState = calculateTime();\n\nexport default (state = initialState, action) => {\n  if (action.type === constants.UPDATE_TIME) {\n    return Object.assign({}, state, calculateTime());\n  }\n\n  return state;\n};\n","import * as constants from '../constants';\n\nconst getLocale = () => {\n  const navigatorLang = navigator.language.split('-')[0];\n\n  if (navigatorLang === constants.LOCALE_EN ||\n      navigatorLang === constants.LOCALE_ES) {\n    return navigatorLang;\n  }\n\n  return constants.LOCALE_EN;\n};\n\nconst defaultLocale = localStorage.getItem(constants.LOCAL_STORAGE_LOCALE_KEY) || getLocale();\n\nconst initialState = {\n  selected: defaultLocale,\n  locale: constants.LOCALE_EN,\n};\n\nexport default (state = initialState, action) => {\n  if (action.type === constants.CHANGE_LANGUAGE) {\n    const { language, locale } = action;\n\n    localStorage.setItem(constants.LOCAL_STORAGE_LOCALE_KEY, locale);\n\n    return Object.assign({}, state, {\n      selected: language,\n      locale,\n    });\n  }\n\n  return state;\n};\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider as StoreProvider } from 'react-redux';\nimport { IntlProvider } from 'react-intl';\nimport { ConnectedRouter as RouterProvider } from 'connected-react-router';\nimport Routes from '../components/Routes';\nimport GlobalStyle from '../components/GlobalStyle';\nimport theme from '../resources/theme';\nimport selectLanguage from '../selectors/selectLanguage'\n\nconst IntlContainer = ({ messages }) => (\n  <IntlProvider locale=\"en\" messages={messages[selectLanguage()]}>\n    <Routes />\n  </IntlProvider>\n);\n\nconst App = ({ store, history, messages }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <StoreProvider store={store}>\n        <RouterProvider history={history}>\n          <IntlContainer messages={messages} />\n        </RouterProvider>\n      </StoreProvider>\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React, { Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport FullPageLayout from '../containers/FullPageLayout';\nimport MainLayout from '../containers/MainLayout';\n\nconst Home = lazy(() => import('../pages/Home'));\nconst WhatIsThis = lazy(() => import('../pages/WhatIsThis'));\nconst About = lazy(() => import('../pages/About'));\n\nconst Routes = () => (\n\n  <Switch>\n    <Route exact path='/'>\n      <FullPageLayout>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Home />\n        </Suspense>\n      </FullPageLayout>\n    </Route>\n    <MainLayout>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Route exact path='/what-is-this' component={WhatIsThis} />\n        <Route exact path='/about' component={About} />\n      </Suspense>\n    </MainLayout>\n    <Route path=\"*\">\n      <h1>404</h1>\n    </Route>\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n// import styles from './styles';\nimport styled from 'styled-components';\nimport Navbar from '../components/Navbar';\n\nconst FullPageLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  flex: 1 0 auto;\n\n  /* ScrollToTop */\n  height: 100%;\n  width: 100%;\n  position: relative;\n`;\n\nconst Wrapper = ({ children }) => (\n  <FullPageLayout>\n    <Navbar brandText={<FormattedMessage id=\"app.brand-text\" />} />\n    {children}\n  </FullPageLayout>\n);\n\nexport default Wrapper;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport LanguageSelector from '../components/LanguageSelector';\nimport { changeLanguage } from '../actions/language';\nimport * as constants from '../constants';\n\nconst languages = [\n  {\n    id: constants.LANGUAGE_SPANISH,\n    locale: 'es',\n    text: <FormattedMessage id=\"language.spanish\" />,\n  },\n  {\n    id: constants.LANGUAGE_ENGLISH,\n    locale: 'en',\n    text: <FormattedMessage id=\"language.english\" />,\n  },\n];\n\nconst MainLayout = styled.div`\n  margin-top: 5rem;\n  padding-bottom: 6rem;\n  flex: 1 0 auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n\n  @media only screen and (min-width: 80rem) { /* width < 80rem (OK) */\n    margin: 4rem 0 0 0; /* margin: 4rem 1rem 0 1rem; */\n  }\n`;\n\nconst Container = styled.div`\n  flex: 1 0 auto;\n  max-width: 76rem;\n  width: 100%;\n\n  & p {\n    text-align: justify;\n  }\n\n  @media only screen and (max-width: 79.999rem) { /* width < 80rem */\n    margin: 0 1rem;\n    width: auto;\n  }\n`;\n\nconst Wrapper = ({ children }) => {\n  const dispatch = useDispatch();\n  const onChangeLanguage = (lang, locale) => {\n    dispatch(changeLanguage(lang, locale));\n  };\n\n  return (\n    <MainLayout>\n      <Navbar brandText={<FormattedMessage id=\"app.brand-text\" />} />\n      <Container>\n        {children}\n      </Container>\n      <Footer>\n        <LanguageSelector\n          languages={languages}\n          onChangeLanguage={onChangeLanguage}\n        />\n      </Footer>\n    </MainLayout>\n  );\n}\n\n// export default connect(state => ({\n//   selectedLanguage: state.language.selected,\n// }), {\n//   changeLanguage: _changeLanguage,\n// })(MainLayout);\n\nexport default Wrapper;\n","import React from 'react';\nimport { FormattedHTMLMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nconst Footer = styled.div`\n  position: fixed;\n  bottom: 0;\n  flex: 1 0 auto;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-top: 1rem;\n  background-color: ${p => p.theme.darkBlack}; /* var(--dark-black) */\n  color: ${p => p.theme.darkWhite}; /* var(--dark-white) */\n  box-shadow: 0.125rem -0.0625rem 1rem 0.25rem ${p => p.theme.minBlack}; /* var(--min-black) */\n\n  @media only screen and (max-width: 80rem) { /* width < 80rem */\n    height: 6rem;\n  }\n`;\n\nconst Container = styled.div`\n  height: 8rem;\n  max-width: 76rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media only screen and (max-width: 80rem) { /* width < 80rem */\n    height: 6rem;\n  }\n`;\n\nconst Wrapper = ({ children }) => (\n  <Footer>\n    <Container>\n      <FormattedHTMLMessage id=\"app.footer.text\" />\n      {children}\n    </Container>\n  </Footer>\n);\n\nWrapper.displayName = 'Footer';\n\nexport default Wrapper;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst LanguageSelector = styled.div`\n  margin: 1rem;\n`;\n\nconst Language = styled.span`\n  cursor: pointer;\n  &:not(:first-child) {\n    margin-left: 0.5rem;\n\n    &:before {\n      margin-right: 0.5rem;\n      content: '|'\n    }\n  }\n`;\n\nconst Wrapper = ({ languages, onChangeLanguage }) => (\n  <LanguageSelector>\n    {\n      languages.map(lang => (\n        <Language\n          key={lang.id}\n          onClick={() => onChangeLanguage(lang.id, lang.locale)}\n        >\n          {lang.text}\n        </Language>\n      ))\n    }\n  </LanguageSelector>\n);\n\nWrapper.displayName = 'LanguageSelector';\n\nexport default Wrapper;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n      height: 100%;\n      width: 100%;\n      margin: 0;\n      padding: 0;\n      font-size: ${p => p.theme.baseFontSize};\n  }\n\n  body {\n      color: ${p => p.theme.baseColor};\n      font-family: ${p => p.theme.baseFontFamily}, Arial;\n      font-size: ${p => p.theme.baseFontSize};\n      & > div {\n          height: 100%;\n          width: 100%;\n      }\n  }\n\n  blockquote {\n      display: block;\n      text-align: center;\n      font-style: italic;\n      font-size: 2.3rem;\n      font-family: \"Slabo 27px\";\n      padding: 0 5rem;\n\n      & p {\n          font-size: 2.3rem!important;\n          text-align: center!important;\n      }\n  }\n\n  p {\n      margin: 0.3rem;\n      font-size: 1.3rem;\n      line-height: 2rem;\n  }\n\n  p + p {\n      margin-top: 1rem;\n  }\n\n  a {\n      color: ${p => p.theme.primaryColor1};\n      text-decoration: none;\n\n      &:hover {\n          color: ${p => p.theme.primaryColor2};\n          text-decoration: underline;\n          text-decoration-style: dashed;\n      }\n  }\n\n  @media only screen and (max-width: 79.999rem) { /* width < 80rem */\n      h1 {\n          font-size: 1.8em;\n          text-align: center;\n      }\n\n      blockquote {\n          padding: 0;\n          margin: 2rem 0;\n          font-size: 2rem;\n      }\n  }\n`;\n\nexport default GlobalStyle;","import { useSelector, shallowEqual } from 'react-redux';\n\nexport default () => useSelector(state => {\n  return state.language.locale\n}, shallowEqual);\n","// Locales\nimport enLocaleMessages from './locales/en.json';\nimport esLocaleMessages from './locales/es';\n\n// Markdown\nimport markdownWhatIsThisEn from './markdown/what-is-this.en.md';\nimport markdownWhatIsThisEs from './markdown/what-is-this.es.md';\nimport markdownAboutEn from './markdown/about.en.md';\nimport markdownAboutEs from './markdown/about.es.md';\n\nenLocaleMessages['content.what-is-this'] = markdownWhatIsThisEn;\nenLocaleMessages['content.about'] = markdownAboutEn;\n\nesLocaleMessages['content.what-is-this'] = markdownWhatIsThisEs;\nesLocaleMessages['content.about'] = markdownAboutEs;\n\nconst messages = {\n  en: enLocaleMessages,\n  es: esLocaleMessages,\n};\n\nexport default messages;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport configureStore, { history } from './resources/store';\nimport App from './containers/App';\n\nconst store = configureStore({});\n\nimport messages from './resources/messages';\n\nconst mountNode = document.getElementById(\"app\");\n\nReactDOM.render(\n  <App\n    store={store}\n    history={history}\n    messages={messages}\n  />,\n  mountNode\n);\n"],"sourceRoot":""}